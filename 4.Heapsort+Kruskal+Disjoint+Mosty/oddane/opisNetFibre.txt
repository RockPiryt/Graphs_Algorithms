Dynamicznie rozwijająca się firma telekomunikacyjna "FiberNet" planuje rozbudowę swojej infrastruktury światłowodowej w województwie. Firma posiada główne węzły komunikacyjne w kilku miastach i musi połączyć je w sposób umożliwiający niezawodną transmisję danych.

Ze względu na wysokie koszty układania światłowodów (zależne od ukształtowania terenu, odległości i pozwoleń), firma musi dokładnie zaplanować, które połączenia zostaną zrealizowane. Dodatkowo, dla zapewnienia niezawodności usług, konieczna jest analiza, które połączenia będą krytyczne dla funkcjonowania sieci (ich awaria mogłaby podzielić sieć na izolowane części).

Dział planowania musi też uwzględnić przyszłą rozbudowę sieci - niektóre połączenia, choć początkowo nie włączone do minimalnego drzewa spinającego, mogą być kluczowe w przypadku awarii lub dalszej rozbudowy. Analiza ma pozwolić na identyfikację takich strategicznych punktów i zaplanowanie ewentualnych tras zapasowych.

Zadanie

Jako główny analityk projektu, Twoim zadaniem jest stworzenie systemu, który:

Wyznaczy minimalny koszt połączenia wszystkich węzłów sieci
Zidentyfikuje połączenia krytyczne (mosty) w sieci
Znajdzie grupy węzłów, które mogą zostać odcięte od reszty sieci
Wymagania Algorytmiczne

Minimalne Drzewo Spinające (MST):
Użycie algorytmu Kruskala
Sortowanie krawędzi przez HeapSort
Jednoznaczny wybór krawędzi:
Pierwszeństwo mają krawędzie o mniejszej wadze
Przy równych wagach decyduje mniejszy numer pierwszego wierzchołka
Przy równych pierwszych wierzchołkach decyduje mniejszy numer drugiego wierzchołka
Struktury Danych:
Implementacja Find-Union z kompresją ścieżki
Własna implementacja kopca do HeapSort
Reprezentacja grafu przez listy krawędzi
Przeszukiwanie:
DFS do znajdowania mostów i komponentów
Zawsze wybieramy sąsiada o najmniejszym numerze
Spójna numeracja wierzchołków w DFS
Format wejścia

Pierwsza linia zawiera dwie liczby całkowite:
n (2 ≤ n ≤ 100) - liczba węzłów sieci
m (n-1 ≤ m ≤ n(n-1)/2) - liczba możliwych połączeń
Kolejne m linii zawiera po trzy liczby całkowite:
a, b (1 ≤ a,b ≤ n) - numery węzłów do połączenia
w (1 ≤ w ≤ 1000000) - koszt realizacji połączenia
Format wyjścia

Pierwsza linia: "MINIMALNE DRZEWO SPINAJĄCE:"
Lista krawędzi w minimalnym drzewie spinającym
Krawędzie posortowane rosnąco według wag
Dla każdej krawędzi: "węzeł_1 węzeł_2 waga"
Na końcu: "Łączny koszt: suma_wag"
Druga linia: "MOSTY:"
Lista krawędzi krytycznych
Format: "węzeł_1 węzeł_2" dla każdego mostu
Jeśli brak mostów: "BRAK MOSTÓW"
Trzecia linia: "KOMPONENTY:"
Liczba i skład komponentów po usunięciu mostów
Format: "k KOMPONENTY: [węzły_1] [węzły_2] ... [węzły_k]"
Węzły w komponencie posortowane rosnąco
Przykład:
Wejście:
5 7
1 2 2
2 3 3
3 4 1
4 5 4
5 1 5
1 3 3
2 4 2

Wyjście:

MINIMALNE DRZEWO SPINAJĄCE:
3 4 1
1 2 2
2 4 2
4 5 4
Łączny koszt: 9

MOSTY:
BRAK MOSTÓW

KOMPONENTY:
1 KOMPONENTY: [1 2 3 4 5]

Przykład: 
Wejście: 

6 5
1 2 1
2 3 2
4 5 3
5 6 4
6 4 5

Wyjście:

MINIMALNE DRZEWO SPINAJĄCE:
1 2 1
2 3 2
4 5 3
5 6 4
Łączny koszt: 10

MOSTY:
1 2
2 3

KOMPONENTY:
4 KOMPONENTY: [1] [2] [3] [4 5 6] 